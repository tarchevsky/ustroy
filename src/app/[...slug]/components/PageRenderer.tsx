import CategoryPage from '@/components/CategoryPage'
import CategoryPostPage from '@/components/CategoryPostPage'
import WpPageComponent from '@/components/WpPageComponent'
import { getApolloClient } from '@/lib/apollo-client'
import { fetchCategoryWithChildren } from '@/services/pageService'
import { fetchPageBySlug } from '@/services/pagesService'
import { notFound } from 'next/navigation'

interface PageRendererProps {
  slug: string[]
}

export async function renderPage({ slug }: PageRendererProps) {
  if (!slug || slug.length === 0) {
    notFound()
  }

  const apolloClient = getApolloClient()
  const path = slug.join('/')

  console.log('üîç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π –ø—É—Ç—å:', path, 'slug:', slug)

  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ WordPress (–æ–¥–∏–Ω —Å–µ–≥–º–µ–Ω—Ç)
  if (slug.length === 1) {
    const pageData = await fetchPageBySlug(apolloClient, slug[0])
    if (pageData) {
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ WordPress:', pageData.title)
      return <WpPageComponent pageData={pageData} />
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π –ø—Ä–æ–µ–∫—Ç–æ–≤
    const projectsCategory = await fetchCategoryWithChildren(
      apolloClient,
      'projects',
    )
    const isProjectChild = projectsCategory?.children?.nodes?.some(
      (child: any) => child.slug === slug[0],
    )
    if (isProjectChild) {
      // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤, –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏–º –ø–æ /child (404)
      notFound()
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å –¥–æ—á–µ—Ä–Ω–∏–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –ø–æ—è–≤—è—Ç—Å—è –¥—Ä—É–≥–∏–µ –∫–æ—Ä–Ω–µ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
    const categoryData = await fetchCategoryWithChildren(apolloClient, slug[0])
    if (categoryData) {
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å –¥–æ—á–µ—Ä–Ω–∏–º–∏:', categoryData.name)
      return <CategoryPage categoryData={categoryData} />
    }
  }

  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é (–¥–≤–∞ —Å–µ–≥–º–µ–Ω—Ç–∞: –∫–∞—Ç–µ–≥–æ—Ä–∏—è/–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è)
  if (slug.length === 2) {
    // –ò—Å–∫–ª—é—á–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã /projects/projects
    if (slug[0] === 'projects' && slug[1] === 'projects') {
      console.log('‚ùå –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã /projects/projects')
      notFound()
    }

    // –ü–æ–ª—É—á–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é (projects)
    const parentCategory = await fetchCategoryWithChildren(
      apolloClient,
      slug[0],
    )
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é
    const categoryData = await fetchCategoryWithChildren(apolloClient, slug[1])

    if (parentCategory && categoryData) {
      // –°–æ–±–∏—Ä–∞–µ–º id –≤—Å–µ—Ö –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ —Ä–æ–¥–∏—Ç–µ–ª—è
      const allCategoryIds = [
        parentCategory.id,
        ...(parentCategory.children?.nodes?.map((c: any) => c.id) || []),
      ]
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã –ø–æ —ç—Ç–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
      const { data } = await apolloClient.query({
        query: require('@/graphql/queries/getPostsByCategories')
          .GET_POSTS_BY_CATEGORIES,
        variables: { categoryIds: allCategoryIds },
      })
      const allPostsForParent = data.posts.edges.map((e: any) => e.node)
      console.log(
        '‚úÖ –í—Å–µ –ø–æ—Å—Ç—ã –ø–æ–¥ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π:',
        allPostsForParent.length,
      )
      return (
        <CategoryPage categoryData={{ ...categoryData, allPostsForParent }} />
      )
    }
  }

  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç (—Ç—Ä–∏ —Å–µ–≥–º–µ–Ω—Ç–∞: –∫–∞—Ç–µ–≥–æ—Ä–∏—è/–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è/–ø–æ—Å—Ç)
  if (slug.length === 3) {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç:', slug[0], slug[1], slug[2])
    // slug[0] = projects (–∫–∞—Ç–µ–≥–æ—Ä–∏—è)
    // slug[1] = cinema (–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è)
    // slug[2] = life (slug –ø–æ—Å—Ç–∞)
    return <CategoryPostPage category={slug[1]} slug={slug[2]} />
  }

  console.log('‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
  notFound()
}
